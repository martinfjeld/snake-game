{"version":3,"sources":["components/board/board.component.tsx","components/snake/snake.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["movement","Howl","require","soundOff","src","soundOn","sound","keyUp","keyDown","start","gameSoundtrack","loop","lose","Board","size","xDown","yDown","handleTouchStart","evt","gameOver","gameStart","firstTouch","touches","getTouches","clientX","clientY","handleTouchMove","xUp","yUp","xDiff","yDiff","Math","abs","directions","left","right","pause","setDirections","prev","changeDirection","stop","stepper","setInterval","difficulty","up","down","handleKeyDown","noSound","play","handleKeyUp","useState","currrentBricks","setCurrentBrick","localStorage","highscore","setHighScore","easy","medium","hard","isActive","setIsActive","setNoSound","setDifficulty","setPause","setGameStart","settings","setSettings","setGameOver","trunc","random","dot","setDot","changeDifficulty","hardness","diff","Object","keys","map","key","console","log","initializeGame","useEffect","brick","join","length","interval","clearInterval","setItem","String","Number","obj","dir","direction","arrItem","i","handleKeyPress","e","keyCode","directionBeforePause","filter","test","navigator","userAgent","document","addEventListener","removeEventListener","className","onMouseDown","onMouseUp","onClick","alt","style","padding","board","x","y","push","currBrick","generateBoard","Snake","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e5a826dd.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./board.styles.scss\";\n\nconst { Howl } = require(\"howler\");\n\ninterface IProps {\n  size: number;\n}\n\ninterface Directions {\n  [direction: string]: boolean;\n}\n\nlet movement: NodeJS.Timeout;\n\nlet soundOff = new Howl({\n  src: [\"./sounds/sound-off.m4a\"],\n});\n\nlet soundOn = new Howl({\n  src: [\"./sounds/sound-on.m4a\"],\n});\n\nlet sound = new Howl({\n  src: [\"./sounds/eat.m4a\"],\n});\n\nlet keyUp = new Howl({\n  src: [\"./sounds/keypress-up.mp3\"],\n});\n\nlet keyDown = new Howl({\n  src: [\"./sounds/keypress-down.mp3\"],\n});\nlet start = new Howl({\n  src: [\"./sounds/game-start.mp3\"],\n});\nlet gameSoundtrack = new Howl({\n  src: [\"./sounds/game-soundtrack.m4a\"],\n  loop: true,\n});\nlet lose = new Howl({\n  src: [\"./sounds/lose.m4a\"],\n});\n\nexport const Board: React.FC<IProps> = ({ size }) => {\n  var xDown: number = 0;\n  var yDown: number = 0;\n\n  function getTouches(evt: TouchEvent) {\n    return evt.touches;\n  }\n\n  function handleTouchStart(evt: TouchEvent) {\n    if (gameOver || !gameStart) return;\n    const firstTouch = getTouches(evt)[0];\n    xDown = firstTouch.clientX;\n    yDown = firstTouch.clientY;\n  }\n\n  function handleTouchMove(evt: TouchEvent) {\n    if (gameOver || !gameStart) return;\n    if (!xDown || !yDown) {\n      return;\n    }\n\n    var xUp = evt.touches[0].clientX;\n    var yUp = evt.touches[0].clientY;\n\n    var xDiff = xDown - xUp;\n    var yDiff = yDown - yUp;\n\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n      /*most significant*/\n      if (xDiff > 0) {\n        if (directions.left || directions.right || pause) return;\n        // If the swipes left\n        setDirections((prev) => {\n          return changeDirection(prev, \"left\");\n        });\n\n        stop(movement);\n        stepper(\"left\", movement);\n\n        movement = setInterval(() => {\n          stepper(\"left\", movement);\n        }, 1000 / difficulty);\n      } else {\n        if (directions.right || directions.left || pause) return;\n        // If the swipes right\n        setDirections((prev) => {\n          return changeDirection(prev, \"right\");\n        });\n\n        stop(movement);\n        stepper(\"right\", movement);\n\n        movement = setInterval(() => {\n          stepper(\"right\", movement);\n        }, 1000 / difficulty);\n      }\n    } else {\n      if (yDiff > 0) {\n        if (directions.up || directions.down || pause) return;\n        // If the swipes up\n        setDirections((prev) => {\n          return changeDirection(prev, \"up\");\n        });\n\n        stop(movement);\n        stepper(\"up\", movement);\n        movement = setInterval(() => {\n          stepper(\"up\", movement);\n        }, 1000 / difficulty);\n      } else {\n        if (directions.down || directions.up || pause) return;\n        // If the swipes down\n        setDirections((prev) => {\n          return changeDirection(prev, \"down\");\n        });\n\n        stop(movement);\n        stepper(\"down\", movement);\n\n        movement = setInterval(() => {\n          stepper(\"down\", movement);\n        }, 1000 / difficulty);\n      }\n    }\n    /* reset values */\n    xDown = 0;\n    yDown = 0;\n  }\n\n  const handleKeyDown = () => {\n    !noSound && keyDown.play();\n  };\n  const handleKeyUp = () => {\n    !noSound && keyUp.play();\n  };\n\n  // The bricks on the board, starting at x2, y2\n  const [currrentBricks, setCurrentBrick] = useState([[1, 2]]);\n  const [highscore, setHighScore] = useState<number>(\n    localStorage[\"locale\"] || 0\n  );\n\n  const [isActive, setIsActive] = useState({\n    easy: true,\n    medium: false,\n    hard: false,\n  });\n\n  const [noSound, setNoSound] = useState(false);\n\n  // Difficulty level\n  const [difficulty, setDifficulty] = useState<number>(3);\n\n  // Pause condition\n  const [pause, setPause] = useState<boolean>(false);\n\n  // Starting a new game\n  const [gameStart, setGameStart] = useState<boolean>(false);\n\n  // Show settings\n  const [settings, setSettings] = useState<boolean>(false);\n\n  // Condition of the game\n  const [gameOver, setGameOver] = useState<boolean>(false);\n\n  // Dot position\n  const [dot, setDot] = useState<[number, number]>([\n    Math.trunc(Math.random() * size),\n    Math.trunc(Math.random() * size),\n  ]);\n\n  const changeDifficulty = (hardness: number, diff: string) => {\n    setIsActive((prev: { [active: string]: boolean }): any => {\n      Object.keys(prev).map((key) => {\n        return (prev[key] = false);\n      });\n\n      return { ...prev, [diff]: true };\n    });\n    console.log(isActive);\n\n    setDifficulty(hardness);\n  };\n\n  // Current direction\n  const [directions, setDirections] = useState<Directions>({\n    left: false,\n    right: false,\n    up: false,\n    down: false,\n  });\n\n  const initializeGame = () => {\n    !noSound && gameSoundtrack.play();\n    setDirections({\n      left: false,\n      right: false,\n      up: false,\n      down: true,\n    });\n    setCurrentBrick([[1, 2]]);\n    setGameOver(false);\n\n    movement = setInterval(() => {\n      stepper(\"down\", movement);\n    }, 1000 / difficulty);\n  };\n\n  const startGame = () => {\n    console.log(`Hello!`);\n    !noSound && start.play();\n    setGameStart(true);\n    initializeGame();\n  };\n\n  //   Generate a matrix board\n  const generateBoard = () => {\n    let board = [];\n\n    for (let x = 0; x < size; x++) {\n      for (let y = 0; y < size; y++) {\n        board.push([x, y]);\n      }\n    }\n\n    // Map through the board and make canvas\n    return board.map((brick, i) => {\n      return (\n        <div\n          key={i}\n          className={`brick${currrentBricks\n            .map((currBrick) => {\n              return currBrick.join(\"\") === brick.join(\"\")\n                ? ` current`\n                : brick.join(\"\") === dot.join(\"\")\n                ? \" dot\"\n                : \"\";\n            })\n            .join(\"\")}`}\n        ></div>\n      );\n    });\n  };\n\n  // Growing the snake 1 at the time (adding to 'currentBricks')\n  const snakeGrow = () => {\n    !noSound && sound.play();\n    setCurrentBrick((prev) => {\n      return [...prev, [prev[prev.length - 1][0], prev[prev.length - 1][1]]];\n    });\n  };\n\n  //   Generate a new random for the treat if current poition is the same as treat\n  useEffect(() => {\n    currrentBricks.map((brick) => {\n      // if the dot hides inside the snake, generate a new position\n      if (brick.join() === dot.join()) {\n        setDot([\n          Math.trunc(Math.random() * size),\n          Math.trunc(Math.random() * size),\n        ]);\n      }\n      return null;\n    });\n\n    if (currrentBricks[0].join(\"\") === dot.join(\"\")) {\n      snakeGrow();\n    }\n  }, [currrentBricks, dot, size]);\n\n  // Stop the snake from moving any further\n  const stop = (interval: NodeJS.Timeout) => {\n    if (!interval) return;\n    clearInterval(interval);\n  };\n\n  useEffect(() => {\n    if (gameOver) {\n      localStorage.setItem(\"locale\", String(highscore));\n      if (currrentBricks.length - 1 >= Number(highscore)) {\n        setHighScore(currrentBricks.length - 1);\n      }\n      !noSound && lose.play();\n      gameSoundtrack.pause();\n      clearInterval(movement);\n      return;\n    }\n  }, [gameOver, noSound, currrentBricks.length, highscore]);\n\n  // Change the direction of the snake\n  var changeDirection = (obj: Directions, dir: string) => {\n    Object.keys(obj).map((key) => {\n      return (obj[key] = false);\n    });\n\n    return { ...obj, [dir]: true };\n  };\n\n  // Control of which direction the snake should 'step'\n  const stepper = (direction: string, interval: NodeJS.Timeout) => {\n    setCurrentBrick((prev): any => {\n      if (\n        (direction === \"up\" && prev[0][0] <= 0) ||\n        (direction === \"down\" && prev[0][0] >= size - 1) ||\n        (direction === \"left\" && prev[0][1] <= 0) ||\n        (direction === \"right\" && prev[0][1] >= size - 1)\n      ) {\n        clearInterval(interval);\n        setGameOver(true);\n      }\n\n      return prev.map((arrItem, i) => {\n        if (i === 0) {\n          if (direction === \"up\") {\n            return [arrItem[0] - 1, arrItem[1]];\n          } else if (direction === \"down\") {\n            return [arrItem[0] + 1, arrItem[1]];\n          } else if (direction === \"left\") {\n            return [arrItem[0], arrItem[1] - 1];\n          } else if (direction === \"right\") {\n            return [arrItem[0], arrItem[1] + 1];\n          }\n        } else {\n          return prev[i - 1];\n        }\n        return null;\n      });\n    });\n  };\n\n  useEffect(() => {\n    currrentBricks.map((brick, i) => {\n      if (i < 2) return null;\n      if (brick.join(\"\") === currrentBricks[0].join(\"\")) {\n        setGameOver(true);\n      }\n      return null;\n    });\n  }, [currrentBricks]);\n\n  //   User controller\n  const handleKeyPress = (e: any) => {\n    if (gameOver || !gameStart) return;\n\n    if (e.keyCode === 38) {\n      // If the user presses the arrow UP key\n      if (directions.up || directions.down || pause) return;\n      setDirections((prev) => {\n        return changeDirection(prev, \"up\");\n      });\n\n      stop(movement);\n      stepper(\"up\", movement);\n      movement = setInterval(() => {\n        stepper(\"up\", movement);\n      }, 1000 / difficulty);\n    } else if (e.keyCode === 40) {\n      // If the user presses the arrow DOWN key\n\n      if (directions.down || directions.up || pause) return;\n      setDirections((prev) => {\n        return changeDirection(prev, \"down\");\n      });\n\n      stop(movement);\n      stepper(\"down\", movement);\n\n      movement = setInterval(() => {\n        stepper(\"down\", movement);\n      }, 1000 / difficulty);\n    } else if (e.keyCode === 37) {\n      // If the user presses the arrow LEFT key\n\n      if (directions.left || directions.right || pause) return;\n      setDirections((prev) => {\n        return changeDirection(prev, \"left\");\n      });\n\n      stop(movement);\n      stepper(\"left\", movement);\n\n      movement = setInterval(() => {\n        stepper(\"left\", movement);\n      }, 1000 / difficulty);\n    } else if (e.keyCode === 39) {\n      // If the user presses the arrow RIGHT key\n\n      if (directions.right || directions.left || pause) return;\n      setDirections((prev) => {\n        return changeDirection(prev, \"right\");\n      });\n\n      stop(movement);\n      stepper(\"right\", movement);\n\n      movement = setInterval(() => {\n        stepper(\"right\", movement);\n      }, 1000 / difficulty);\n    } else if (e.keyCode === 32) {\n      setPause((prev: boolean) => !prev);\n      gameSoundtrack.pause();\n      clearInterval(movement);\n\n      if (pause) {\n        setSettings(false);\n        !noSound && gameSoundtrack.play();\n        let directionBeforePause = Object.keys(directions).filter((key) => {\n          if (directions[key] === true) {\n            return key;\n          }\n          return null;\n        });\n\n        stepper(String(directionBeforePause), movement);\n        movement = setInterval(() => {\n          stepper(String(directionBeforePause), movement);\n        }, 1000 / difficulty);\n      }\n    }\n  };\n\n  // Add the event-listeners to the dom\n  useEffect(() => {\n    if (\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n        navigator.userAgent\n      )\n    ) {\n      // some code..\n      document.addEventListener(\"touchstart\", handleTouchStart, false);\n      document.addEventListener(\"touchmove\", handleTouchMove, false);\n    } else {\n      document.addEventListener(\"keydown\", handleKeyPress);\n      document.addEventListener(\"touchstart\", handleKeyPress);\n    }\n    return () => {\n      if (\n        /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n          navigator.userAgent\n        )\n      ) {\n        // some code..\n        document.removeEventListener(\"touchstart\", handleTouchStart, false);\n        document.removeEventListener(\"touchmove\", handleTouchMove, false);\n      } else {\n        document.removeEventListener(\"keydown\", handleKeyPress);\n        document.removeEventListener(\"touchstart\", handleKeyPress);\n      }\n    };\n  });\n\n  return (\n    <>\n      <h3 className=\"score-corner\">\n        Score: {currrentBricks.length - 1}\n        <br />\n        Highscore: {highscore}\n      </h3>\n      <div className=\"pause-icon\"></div>\n      <div className=\"board-container\">\n        {!gameStart && !settings && (\n          <div className=\"start-game\">\n            <h1>Snake</h1>\n            <div className=\"difficulty\">\n              <button\n                className={isActive.easy ? \"active\" : \"\"}\n                onMouseDown={handleKeyDown}\n                onMouseUp={handleKeyUp}\n                onClick={() => changeDifficulty(3, \"easy\")}\n              >\n                Easy\n              </button>\n              <button\n                className={isActive.medium ? \"active\" : \"\"}\n                onMouseDown={handleKeyDown}\n                onMouseUp={handleKeyUp}\n                onClick={() => changeDifficulty(5, \"medium\")}\n              >\n                Medium\n              </button>\n              <button\n                className={isActive.hard ? \"active\" : \"\"}\n                onMouseDown={handleKeyDown}\n                onMouseUp={handleKeyUp}\n                onClick={() => changeDifficulty(9, \"hard\")}\n              >\n                Hard\n              </button>\n            </div>\n\n            <div\n              className=\"settings-icon\"\n              onClick={() => {\n                !noSound && soundOn.play();\n                setSettings(true);\n              }}\n            >\n              <img src=\"./icons/settings-icon.svg\" alt=\"settings\" />\n            </div>\n            <button\n              onMouseDown={handleKeyDown}\n              onMouseUp={handleKeyUp}\n              className=\"start-game-btn\"\n              onClick={startGame}\n            >\n              Start game\n            </button>\n          </div>\n        )}\n        {settings && (\n          <div className=\"start-game-controls\">\n            <button\n              className=\"sound-control\"\n              onClick={() => {\n                !noSound ? soundOff.play() : soundOn.play();\n                setNoSound((prev) => !prev);\n              }}\n            >\n              <img\n                src={\n                  !noSound ? `./icons/sound-on.svg` : `./icons/sound-off.svg`\n                }\n                alt=\"sound\"\n              />\n            </button>\n            <div\n              onClick={() => {\n                !noSound && soundOn.play();\n                setSettings(false);\n              }}\n              className=\"go-back\"\n            >\n              ←\n            </div>\n            <p>Move:</p>\n            <div className=\"start-game-controls-container\">\n              <div className=\"start-game-controls-container_btn\">↑</div>\n            </div>\n            <div className=\"start-game-controls-container\">\n              <div className=\"start-game-controls-container_btn\">←</div>\n              <div className=\"start-game-controls-container_btn\">↓</div>\n              <div className=\"start-game-controls-container_btn\">→</div>\n            </div>\n            <p>Pause:</p>\n            <div className=\"start-game-controls-container\">\n              <div\n                className=\"start-game-controls-container_btn\"\n                style={{ padding: \"0rem 2rem\" }}\n              >\n                ⎵\n              </div>\n            </div>\n          </div>\n        )}\n        {pause && !settings && (\n          <div className=\"pause\">\n            <div\n              onClick={() => {\n                !noSound && soundOn.play();\n                setSettings(true);\n              }}\n              className=\"settings-icon\"\n            >\n              <img src=\"./icons/settings-icon.svg\" alt=\"settings\" />\n            </div>\n            <h1>Paused</h1>\n            <h1 className=\"score\">Score: {currrentBricks.length - 1}</h1>\n          </div>\n        )}\n        {gameOver && (\n          <div className=\"game-over\">\n            <h1 className=\"game-over-text\">Game over!</h1>\n            <button\n              className=\"game-over-btn\"\n              onMouseDown={handleKeyDown}\n              onMouseUp={handleKeyUp}\n              onClick={initializeGame}\n            >\n              Play again\n            </button>\n          </div>\n        )}\n        <div className=\"board\">{generateBoard()}</div>\n        <div className=\"depth\"></div>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Board } from \"../board/board.component\";\nimport \"./snake.styles.scss\";\n\nexport const Snake = () => {\n  return (\n    <div>\n      <Board size={10} />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport \"./App.css\";\nimport { Snake } from \"./components/snake/snake.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Snake />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}